version: 2.1

executors:
  go-container:
    docker:
      - image: circleci/golang:1.13
        environment:
          CGO_ENABLED: 0
          GO111MODULE: "on"

  github-container:
    docker:
      - image: cibuilds/github:0.10

jobs:
  cleanup-test:
    executor: go-container
    steps:
      - checkout
      - restore_cache:
          keys:
            - go-mod-v1-{{ .Branch }}-{{ checksum "go.mod" }}
            - go-mod-v1-{{ .Branch }}-
            - go-mod-v1-
            - git-v1-{{ .Branch }}-{{ .Revision }}
            - git-v1-{{ .Branch }}
      - run: go mod download
      - save_cache:
          key: go-mod-v1-{{ .Branch }}-{{ checksum "go.mod" }}
          paths:
            - /go/pkg
      - save_cache:
          key: git-v1-{{ .Branch }}-{{ .Revision }}
          paths:
            - ".git"
      - run: make test

  cleanup-build:
    executor: go-container
    steps:
      - checkout
      - restore_cache:
          keys:
            - go-mod-v1-{{ .Branch }}-{{ checksum "go.mod" }}
            - go-mod-v1-{{ .Branch }}-
            - go-mod-v1-
            - git-v1-{{ .Branch }}-{{ .Revision }}
            - git-v1-{{ .Branch }}
      - run: go mod download
      - save_cache:
          key: go-mod-v1-{{ .Branch }}-{{ checksum "go.mod" }}
          paths:
            - /go/pkg
      - save_cache:
          key: git-v1-{{ .Branch }}-{{ .Revision }}
          paths:
            - ".git"
      - run:
          name: Build the cleanup binary
          command: make build

  cleanup-release-build:
    executor: go-container
    steps:
      - checkout
      - restore_cache:
          keys:
            - go-mod-v1-{{ .Branch }}-{{ checksum "go.mod" }}
            - go-mod-v1-{{ .Branch }}-
            - go-mod-v1-
            - git-v1-{{ .Branch }}-{{ .Revision }}
            - git-v1-{{ .Branch }}
      - run: go mod download
      - save_cache:
          key: go-mod-v1-{{ .Branch }}-{{ checksum "go.mod" }}
          paths:
            - /go/pkg
      - save_cache:
          key: git-v1-{{ .Branch }}-{{ .Revision }}
          paths:
            - ".git"
      - run: mkdir /tmp/artifacts && mkdir /tmp/local-bin
      - run:
          name: Build and pack cleanup for Linux
          command: |
            GOOS=linux GOARCH=amd64 go build -v -o .target/cleanup .
            cp .target/cleanup /tmp/local-bin/cleanup
            tar -czf /tmp/artifacts/cleanup-linux-amd64.tar.gz .target/cleanup
      - run:
          name: Build and pack cleanup for macOS
          command: |
            GOOS=darwin GOARCH=amd64 go build -v -o .target/cleanup .
            tar -czf /tmp/artifacts/cleanup-macos-amd64.tar.gz .target/cleanup
      - run:
          name: Build and pack cleanup for Windows
          command: |
            GOOS=windows GOARCH=amd64 go build -v -o .target/cleanup .
            zip /tmp/artifacts/cleanup-windows-amd64.zip .target/cleanup
      - persist_to_workspace:
          root: /tmp/artifacts
          paths:
            - cleanup-linux-amd64.tar.gz
            - cleanup-macos-amd64.tar.gz
            - cleanup-windows-amd64.zip
      - persist_to_workspace:
          root: /tmp/local-bin
          paths:
            - cleanup

  gh-release:
    executor: github-container
    steps:
      - attach_workspace:
          at: /tmp/artifacts
      - attach_workspace:
          at: /tmp/local-bin
      - run: echo $(ls -la)
      - run:
          name: Publish GitHub release
          command: |
            VERSION=$(sh local-bin/cleanup --quiet version)
            ghr -t ${GITHUB_TOKEN} \
                -u ${CIRCLE_PROJECT_USERNAME} \
                -r ${CIRCLE_PROJECT_REPONAME} \
                -c ${CIRCLE_SHA1} \
                -delete ${VERSION} artifacts/

workflows:
  version: 2
  cleanup-ci:
    jobs:
      - cleanup-build
      - cleanup-test:
          requires:
            - cleanup-build
      - cleanup-release-build:
          requires:
            - cleanup-test
          filters:
            #branches:
              #ignore: /.*/
            tags:
              only: /^\d+\.\d+\.\d+$/
      - gh-release:
          requires:
            - cleanup-release-build